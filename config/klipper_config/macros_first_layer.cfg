# not tested on delta printers, assumes square bed
[gcode_macro FIRST_LAYER_TEST]
description: Prints a small square pad above each configured bed screw
gcode:
  {% set MOVE_SPEED = params.MOVE_SPEED|default(200)|float %} # mm/s
  {% set SPEED = params.SPEED|default(20)|float%} # mm/s
  {% set PAD_SIZE = params.PAD_SIZE|default(20)|float %} # mm per side of the square
  {% set Z = params.Z|default(0.2)|float %} # first layer height
  {% set Z_SPEED = params.Z_SPEED|default(10)|float %}  # mm/s

  {% set pi = 3.141592653589793 %} # todo: find way to access math.pi from template

  {% set filament_area = pi/4*1.75**2 %}

  # https://manual.slic3r.org/advanced/flow-math
  {% set extrude_area = Z*(printer.configfile.settings.extruder.nozzle_diameter-Z) + pi*(Z*0.5)**2 %}
  {% set extrude_spacing = printer.configfile.settings.extruder.nozzle_diameter - Z*(1-pi*0.25) %}

  # disable this test for dry/cold runs when working on the macro.
#  {% if not printer.extruder.can_extrude %}
#    { action_raise_error("Extrude below minimum temp") }
#  {% endif %}

  {% if printer.toolhead.homed_axes != 'xyz' %}
    G28 ; home
  {% endif %}

  M83 ; relative e movement
  G92 E0 ; reset e
  
  {% for i in range(1, 10+1) %}
    {% set pos = printer['configfile']['settings']['bed_screws']['screw%d'%i] %}
    {% if pos %}
      {% set x, y = pos %}
      {% set x = x|float %}
      {% set y = y|float %}
      {% set min_x = (x-PAD_SIZE/2, printer.configfile.settings.stepper_x.position_min+1)|max %}
      {% set max_x = (x+PAD_SIZE/2, printer.configfile.settings.stepper_x.position_max-1)|min %}
      {% set min_y = (y-PAD_SIZE/2, printer.configfile.settings.stepper_y.position_min+1)|max %}
      {% set max_y = (y+PAD_SIZE/2, printer.configfile.settings.stepper_y.position_max-1)|min %}
      {% set e = (max_y-min_y)*extrude_area/filament_area if printer.extruder.can_extrude else 0 %}

      #{ action_respond_info("%d : %f-%f %f-%f  %f" % (i, min_x, max_x, min_y, max_y, e)) }
      {% for i in range(((max_x-min_x)/extrude_spacing)|int) %}
        {% set x = min_x + i*extrude_spacing %}
        G0 X{x} Y{min_y if (i%2) else max_y} F{MOVE_SPEED*60}
        {% if i == 0 %}
          G0 Z{Z} F{Z_SPEED*60}
        {% endif %} 
        G1 X{x} Y{max_y if (i%2) else min_y} F{SPEED*60} E{e}
      {% endfor %}
      G0 Z1 F{Z_SPEED*60}

    {% endif %} 
  {% endfor %}

  G1 E-2 F1800 ; Retract filament to prevent oozing
  G0 Z20 F{Z_SPEED*60}
  G0 X{printer.configfile.settings.stepper_x.position_max-1} Y{printer.configfile.settings.stepper_y.position_max-1} F{MOVE_SPEED*60}
